begintemplate axoaxoniccell
public init, topol, basic_shape, subsets, geom, biophys
public  pre_list, connect_pre, append_sections, is_art, is_connected, gid, randi
public soma, radT2, radM2, radt2, lmM2, lmt2, radT1
public radM1, radt1, lmM1, lmt1, oriT1, oriM1, orit1
public oriT2, oriM2, orit2
public all, basal_list, apical_list, soma_list, axon_list, lm_list, rad_list
public x, y, z, position

public pyramidalcell_list, axoaxoniccell_list, bistratifiedcell_list, cckcell_list
public ivycell_list, ngfcell_list, olmcell_list, pvbasketcell_list, scacell_list
public eccell_list, ca3cell_list, mscell_list

// objects
objref syn, pre_list, templist

// external variables
external numCellTypes, cellType

proc init() {
	gid = $1
	randi = $2
  	topol()
  	subsets()
  	geom()
  	biophys()
  	geom_nseg()
  	pre_list = new List()
	define_synapses()
}

create soma, radT2, radM2, radt2, lmM2, lmt2, radT1
create radM1, radt1, lmM1, lmt1, oriT1, oriM1, orit1
create oriT2, oriM2, orit2

proc topol() { local i
  	connect radT2(0), soma(1)
  	connect radM2(0), radT2(1)
  	connect radt2(0), radM2(1)
  	connect lmM2(0), radt2(1)
  	connect lmt2(0), lmM2(1)
  	connect radT1(0), soma(0)
  	connect radM1(0), radT1(1)
  	connect radt1(0), radM1(1)
  	connect lmM1(0), radt1(1)
  	connect lmt1(0), lmM1(1)
  	connect oriT1(0), soma(0)
  	connect oriM1(0), oriT1(1)
  	connect orit1(0), oriM1(1)
  	connect oriT2(0), soma(1)
  	connect oriM2(0), oriT2(1)
  	connect orit2(0), oriM2(1)
  	//basic_shape()
}

proc basic_shape() {
  	soma {pt3dclear() pt3dadd(0, 0, 0, 1) pt3dadd(15, 0, 0, 1)}
  	radT2 {pt3dclear() pt3dadd(15, 0, 0, 1) pt3dadd(45, 30, 0, 1)}
  	radM2 {pt3dclear() pt3dadd(45, 30, 0, 1) pt3dadd(75, 60, 0, 1)}
  	radt2 {pt3dclear() pt3dadd(75, 60, 0, 1) pt3dadd(90, 75, 0, 1)}
  	lmM2 {pt3dclear() pt3dadd(90, 75, 0, 1) pt3dadd(105, 90, 0, 1)}
  	lmt2 {pt3dclear() pt3dadd(105, 90, 0, 1) pt3dadd(120, 105, 0, 1)}
  	radT1 {pt3dclear() pt3dadd(0, 0, 0, 1) pt3dadd(-14, 15, 0, 1)}
  	radM1 {pt3dclear() pt3dadd(-14, 15, 0, 1) pt3dadd(-29, 30, 0, 1)}
  	radt1 {pt3dclear() pt3dadd(-29, 30, 0, 1) pt3dadd(-44, 45, 0, 1)}
  	lmM1 {pt3dclear() pt3dadd(-44, 45, 0, 1) pt3dadd(-59, 60, 0, 1)}
  	lmt1 {pt3dclear() pt3dadd(-59, 60, 0, 1) pt3dadd(-89, 90, 0, 1)}
  	oriT1 {pt3dclear() pt3dadd(0, 0, 0, 1) pt3dadd(-29, -29, 0, 1)}
  	oriM1 {pt3dclear() pt3dadd(-29, -29, 0, 1) pt3dadd(-59, -59, 0, 1)}
  	orit1 {pt3dclear() pt3dadd(-59, -59, 0, 1) pt3dadd(-89, -89, 0, 1)}
  	oriT2 {pt3dclear() pt3dadd(15, 0, 0, 1) pt3dadd(45, -29, 0, 1)}
  	oriM2 {pt3dclear() pt3dadd(45, -29, 0, 1) pt3dadd(75, -59, 0, 1)}
  	orit2 {pt3dclear() pt3dadd(75, -59, 0, 1) pt3dadd(105, -89, 0, 1)}
}

objref all, basal_list, apical_list, soma_list, axon_list, lm_list, rad_list
objref pyramidalcell_list, axoaxoniccell_list, bistratifiedcell_list, cckcell_list
objref ivycell_list, ngfcell_list, olmcell_list, pvbasketcell_list, scacell_list
objref eccell_list, ca3cell_list, mscell_list
proc subsets() { local i
  objref all, basal_list, apical_list, soma_list, axon_list, lm_list, rad_list
	objref pyramidalcell_list, axoaxoniccell_list, bistratifiedcell_list, cckcell_list
	objref ivycell_list, ngfcell_list, olmcell_list, pvbasketcell_list, scacell_list
	objref eccell_list, ca3cell_list, mscell_list
  	all = new SectionList()
  basal_list = new SectionList()
  apical_list = new SectionList()
  soma_list = new SectionList()
  axon_list = new SectionList()
  lm_list = new SectionList()
  rad_list = new SectionList()

	pyramidalcell_list = new SectionList()
	axoaxoniccell_list = new SectionList()
	bistratifiedcell_list = new SectionList()
	cckcell_list = new SectionList()
	ivycell_list = new SectionList()
	ngfcell_list = new SectionList()
	olmcell_list = new SectionList()
	pvbasketcell_list = new SectionList()
	scacell_list = new SectionList()
	eccell_list = new SectionList()
	ca3cell_list = new SectionList()
	mscell_list = new SectionList()

    	soma all.append()
    soma soma_list.append()

    	radT2 all.append()
    	radT2 apical_list.append()
    	radT2 rad_list.append()
    	radM2 all.append()
    	radM2 apical_list.append()
    	radM2 rad_list.append()
    	radt2 all.append()
    	radt2 apical_list.append()
    	radt2 rad_list.append()
    	lmM2 all.append()
    	lmM2 apical_list.append()
    	lmM2 lm_list.append()
    	lmt2 all.append()
    	lmt2 apical_list.append()
    	lmt2 lm_list.append()
    	radT1 all.append()
    	radT1 apical_list.append()
    	radT1 rad_list.append()
    	radM1 all.append()
    	radM1 apical_list.append()
    	radM1 rad_list.append()
    	radt1 all.append()
    	radt1 apical_list.append()
    	radt1 rad_list.append()
    	lmM1 all.append()
    	lmM1 apical_list.append()
    	lmM1 lm_list.append()
    	lmt1 all.append()
    	lmt1 apical_list.append()
    	lmt1 lm_list.append()
    	
    	
    	oriT1 all.append()
    	oriT1 basal_list.append()
    	oriM1 all.append()
    	oriM1 basal_list.append()
    	orit1 all.append()
    	orit1 basal_list.append()
    	oriT2 all.append()
    	oriT2 basal_list.append()
    	oriM2 all.append()
    	oriM2 basal_list.append()
    	orit2 all.append()
    	orit2 basal_list.append()

// precell lists
	forsec basal_list {pyramidalcell_list.append()}
	forsec axon_list {axoaxoniccell_list.append()}
	forsec basal_list {bistratifiedcell_list.append()}
	forsec rad_list {bistratifiedcell_list.append()}
	forsec soma_list {cckcell_list.append()}
	forsec basal_list {ivycell_list.append()}
	forsec rad_list {ivycell_list.append()}
	forsec lm_list {ngfcell_list.append()}
	forsec lm_list {olmcell_list.append()}
	forsec soma_list {pvbasketcell_list.append()}
	forsec basal_list {scacell_list.append()}
	forsec rad_list {scacell_list.append()}
	forsec lm_list {eccell_list.append()}
	forsec rad_list {ca3cell_list.append()}
	forsec rad_list {mscell_list.append()}
}

proc geom() {
  	forsec all {  }
  	soma {  L = 20  diam = 10  }
  	radT2 {  L = 100  diam = 4  }
  	radM2 {  L = 100  diam = 3  }
  	radt2 {  L = 200  diam = 2  }
  	lmM2 {  L = 100  diam = 1.5  }
  	lmt2 {  L = 100  diam = 1  }
  	radT1 {  L = 100  diam = 4  }
  	radM1 {  L = 100  diam = 3  }
  	radt1 {  L = 200  diam = 2  }
  	lmM1 {  L = 100  diam = 1.5  }
  	lmt1 {  L = 100  diam = 1  }
  	oriT1 {  L = 100  diam = 2  }
  	oriM1 {  L = 100  diam = 1.5  }
  	orit1 {  L = 100  diam = 1  }
  	oriT2 {  L = 100  diam = 2  }
  	oriM2 {  L = 100  diam = 1.5  }
  	orit2 {  L = 100  diam = 1  }
}

external lambda_f
proc geom_nseg() {
  	forsec all { nseg = int((L/(0.1*lambda_f(100))+.9)/2)*2 + 1  }
}

proc biophys() {

	gna = 0.15

	soma {
		insert ch_Nav	
		gmax_ch_Nav = gna  		// 0.12 //original 0.030 to .055 
		insert ch_Kdrfast
		gmax_ch_Kdrfast = 0.013  		//original 0.015
		
		insert ch_leak
		gmax_ch_leak = 0.00018
		cm=1.4
	} 

	lmt1 {
		insert ch_Nav	
		gmax_ch_Nav = gna		//0.5  	//original 0.015
		insert ch_Kdrfast
		gmax_ch_Kdrfast = 0.013
		insert ch_leak
		gmax_ch_leak = 0.00018
		cm=1.4
	}		

	lmt2 {
		insert ch_Nav	
		gmax_ch_Nav = gna		//0.5  	//original 0.015
		insert ch_Kdrfast
		gmax_ch_Kdrfast = 0.013
		insert ch_leak
		gmax_ch_leak = 0.00018
		cm=1.4
	}		

	lmM1 {
		insert ch_Nav	
		gmax_ch_Nav = gna		//0.45  	//original 0.015
		insert ch_Kdrfast
		gmax_ch_Kdrfast = 0.013
		insert ch_leak
		gmax_ch_leak = 0.00018
		cm=1.4
	}		

	lmM2 {
		insert ch_Nav	
		gmax_ch_Nav = gna		//0.45  	//original 0.015
		insert ch_Kdrfast
		gmax_ch_Kdrfast = 0.013
		insert ch_leak
		gmax_ch_leak = 0.00018
		cm=1.4
	}		
	
	radt1 {
		insert ch_Nav	
		gmax_ch_Nav = gna		//0.4  	//original 0.015
		insert ch_Kdrfast
		gmax_ch_Kdrfast = 0.013
		insert ch_leak
		gmax_ch_leak = 0.00018
		cm=1.4
	}		

	radt2 {
		insert ch_Nav	
		gmax_ch_Nav = gna		//0.4  	//original 0.015
		insert ch_Kdrfast
		gmax_ch_Kdrfast = 0.013
		insert ch_leak
		gmax_ch_leak = 0.00018
		cm=1.4
	}		

	radM1 {
		insert ch_Nav	
		gmax_ch_Nav = gna		//0.3  	//original 0.015
		insert ch_Kdrfast
		gmax_ch_Kdrfast = 0.013
		insert ch_leak
		gmax_ch_leak = 0.00018
		cm=1.4
	}		

	radM2 {
		insert ch_Nav	
		gmax_ch_Nav = gna		//0.3  	//original 0.015
		insert ch_Kdrfast
		gmax_ch_Kdrfast = 0.013
		insert ch_leak
		gmax_ch_leak = 0.00018
		cm=1.4
	}		

	radT1 {
		insert ch_Nav	
		gmax_ch_Nav = gna		//0.2  	//original 0.015
		insert ch_Kdrfast
		gmax_ch_Kdrfast = 0.013
		insert ch_leak
		gmax_ch_leak = 0.00018
		cm=1.4
	}		

	radT2 {
		insert ch_Nav	
		gmax_ch_Nav = gna		//0.2  	//original 0.015
		insert ch_Kdrfast
		gmax_ch_Kdrfast = 0.013
		insert ch_leak
		gmax_ch_leak = 0.00018
		cm=1.4
	}			

	oriT1 {
		insert ch_Nav	
		gmax_ch_Nav = gna  		//original 0.015
		insert ch_Kdrfast
		gmax_ch_Kdrfast = 0.013
		insert ch_leak
		gmax_ch_leak = 0.00018
		cm=1.4
	}		

	oriT2 {
		insert ch_Nav	
		gmax_ch_Nav = gna  		//original 0.015
		insert ch_Kdrfast
		gmax_ch_Kdrfast = 0.013
		insert ch_leak
		gmax_ch_leak = 0.00018
		cm=1.4
	}		

	oriM1 {
		insert ch_Nav	
		gmax_ch_Nav = gna  		//original 0.015
		insert ch_Kdrfast
		gmax_ch_Kdrfast = 0.013
		insert ch_leak
		gmax_ch_leak = 0.00018
		cm=1.4
	}		

	oriM2 {
		insert ch_Nav	
		gmax_ch_Nav = gna  		//original 0.015
		insert ch_Kdrfast
		gmax_ch_Kdrfast = 0.013
		insert ch_leak
		gmax_ch_leak = 0.00018
		cm=1.4
	}		
	
	orit1 {
		insert ch_Nav	
		gmax_ch_Nav = gna  		// Sodium conductance (original 0.015)
		insert ch_Kdrfast
		gmax_ch_Kdrfast = 0.013		// Delayed K+ rectifier (fast)
		insert ch_leak
		gmax_ch_leak = 0.00018		// Leak conductance
		cm=1.4
	}		

	orit2 {
		insert ch_Nav	
		gmax_ch_Nav = gna  		// Sodium conductance (original 0.015)
		insert ch_Kdrfast
		gmax_ch_Kdrfast = 0.013		// Delayed K+ rectifier (fast)
		insert ch_leak
		gmax_ch_leak = 0.00018		// Leak conductance
		cm=1.4
	}

	forsec all {
		insert buff_Ca // It doesn't seem to make a difference whether
						// this buffering mechanism is present or absent
						// not sure why - maybe i am missing some parameter
						// Also, I set the Ca channels ions to Ca2+ only,
						// and somehow the cell still looks the same as before
						
		
		insert ch_KvA
		gmax_ch_KvA = 0.00015		// A-type K+ conductance
		
		insert ch_CavNZ  			// N-type Ca2+ conductance
		gmax_ch_CavNZ = 0.0008*1.0  		// check to modify- original 0.004
		
		insert ch_CavLZ 
		gmax_ch_CavLZ = 0.005*1.0		// L-type Ca2+ conductance
		
		insert ch_KCaS
		gmax_ch_KCaS = 0.000002		// Ca2+-dependent K (SK) conductance
		
		insert ch_KvCaB
		gmax_ch_KvCaB = 0.0002*.001			// Ca2+ and Voltage-dependent K+ (BK) conductance

		Ra = 100			// 31.3 +/- 10.9
		ena = 55
		ek = -90
		eca = 130
		e_ch_leak = -60			//-60.06
		cao_iconc_CaZ = 2
	} 					// make catau slower70e-3 	cao=2 cai=50.e-6

}


	proc connect_pre() {  // $o1 target point process, $o2 returned NetCon
	soma $o2 = new NetCon (&v(1), $o1)
			$o2.threshold = -10 //except for bcell to bcell, which is -10???

	}

	func is_art()  { return 0 }

proc position(){ local i
	forall {
		for i = 0, n3d()-1 {
			pt3dchange(i, $1-x+x3d(i), $2-y+y3d(i), $3-z+z3d(i), diam3d(i))
		}
	}
	x = $1  y = $2  z = $3	
}

objref syn  
proc define_synapses() {

}
endtemplate axoaxoniccell
